// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Users {
  id              Int                 @id @default(autoincrement())
  firstName       String
  lastName        String
  email           String
  typeTeacher     String //example : walikelas, guru mapel, kepsek
  typeOfStudy     String // example : penjas, ipa, matematika
  categoryTeacher String // example : ipa, matematika, dll
  rating          Int
  classRoom       UsersOnClassRooms[]

  @@index([id])
}

model ClassRooms {
  id           Int                    @id @default(autoincrement())
  name         String
  location     String
  studentTotal Int
  periodeStart DateTime
  periodeEnd   DateTime
  user         UsersOnClassRooms[]
  students     StudentsOnClassRooms[]
}

model MataPelajarans {
  id   Int    @id @default(autoincrement())
  name String
  code String
}

model UsersOnClassRooms {
  user        Users      @relation(fields: [userId], references: [id])
  userId      Int // relation scalar field (used in the `@relation` attribute above)
  classRoom   ClassRooms @relation(fields: [classRoomId], references: [id])
  classRoomId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt  DateTime   @default(now())
  assignedBy  String

  @@id([userId, classRoomId])
}

model Students {
  id            Int                    @id @default(autoincrement())
  nis           String
  firstName     String
  lastName      String
  email         String
  gender        String
  dateOfBirth   String
  address       String
  parent        String
  rating        Int
  favoriteLearn String // matika, ipa, dll
  Hobby         String //sepak bola, basket, karate, mancing, dll
  classRoom     StudentsOnClassRooms[]

  @@index([id])
}

model StudentsOnClassRooms {
  student     Students   @relation(fields: [studentId], references: [id])
  studentId   Int // relation scalar field (used in the `@relation` attribute above)
  classRoom   ClassRooms @relation(fields: [classRoomId], references: [id])
  classRoomId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt  DateTime   @default(now())
  assignedBy  String

  @@id([studentId, classRoomId])
}

model Absensi {
  id          Int      @id @default(autoincrement())
  teacherId   Int
  classRoomId Int
  studentId   Int
  mapelId     Int
  absensiType String // Sakit, bolos, alpa, terlambat
  absensiDate DateTime

  @@index([id])
}
